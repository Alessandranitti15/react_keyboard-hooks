{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","pressedKey","setPressedKey","useEffect","document","addEventListener","event","key","removeEventListener","className","type","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,qBAAU,WAKR,OAJAC,SAASC,iBAAiB,SAAS,SAACC,GAClCJ,EAAcI,EAAMC,QAGf,WACLH,SAASI,oBAAoB,SAAS,SAACF,GACrCJ,EAAcI,EAAMC,YAMxB,sBAAKE,UAAU,MAAf,UAEE,uBAAOC,KAAK,SAEZ,mBAAGD,UAAU,eAAb,SACGR,EAAU,mCACqBA,EADrB,KAEP,gC,MCpBZU,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.ed9105c7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const App: React.FC = () => {\n  const [pressedKey, setPressedKey] = useState('');\n\n  useEffect(() => {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      setPressedKey(event.key);\n    });\n\n    return () => {\n      document.removeEventListener('keyup', (event: KeyboardEvent) => {\n        setPressedKey(event.key);\n      });\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      {/* Keep this input for tests */}\n      <input type=\"text\" />\n\n      <p className=\"App__message\">\n        {pressedKey\n          ? `The last pressed key is [${pressedKey}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}